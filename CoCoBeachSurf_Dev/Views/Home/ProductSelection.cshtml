

<style>
    /* CSS for styling */
    .product-list {
        display: inline-block;
        width: 45%;
        margin-right: 5%;
        vertical-align: top;
    }

    .selected-products {
        display: inline-block;
        width: 45%;
        vertical-align: top;
    }

    .product {
        /*border: 1px solid #ccc;
        padding: 10px;*/
        margin-bottom: 10px;
        cursor: pointer;
    }

        .product:hover {
            background-color: #f0f0f0;
        }

    #total-sum {
        text-align: center;
        margin-bottom: 20px;
        font-size: 20px;
    }

    .qntybox {
        display: inline !important;
        width: 60px !important;
    }
</style>

<div style="margin-top:4%">
    <p style="margin-left: -120px; margin-top: 100px; display: inline-block;" id="Spanlang">

        <a class="btn btn-warning" href="#" onclick="SaveSelectedProductsList()" id="SalesOrderSpanish" title="SalesOrder">
            Sales Order
        </a>

    </p>

    <p style="margin-left: -120px; margin-top: 100px; display: none;" id="Englang">

        <a class="btn btn-warning" href="#" id="SalesOrder" onclick="SaveSelectedProductsList()" title="SalesOrder">
            Sales Order
        </a>

    </p>
    <div style="text-align:center; margin-top:-85px">
        <h1>PRODUCT SELECTION</h1>
    </div>


    <div class="col-lg-1" style="float:right;margin-top:-40px">
        <div id="total-sum">
            Total: $0
        </div>
    </div>
    <div>
        <div class="product-list" style="display:flex;width:100%">
            <div style="margin-right: 15px;">
                <h4>Enter Product Name</h4>
                <input class="form-control" type="text" id="searchInput" placeholder="Search by name or category">
            </div>
            <h2 style="margin-top:45px"> OR </h2>
            <div style="margin-left: 15px; margin-right: 15px;">
                <h4>Select Category</h4>
                @*<select class="form-control" id="categoryFilter">
                        <option value="">All Categories</option>
                        <option value="electronics">Electronics</option>
                        <option value="clothing">Clothing</option>
                        <option value="books">Books</option>
                    </select>*@
                @Html.DropDownList("select", new SelectList(ViewBag.CatList, "CategoryName", "CategoryName"), "Please select", new { @class = "form-control", @id = "categoryFilter", @style = "appearance:auto" })

            </div>
            <div style="margin-top: 30px;">

                <button class="btn btn-success" style="font-size: 20px; background: #0779ef" title="Next">
                    search
                </button>
                <button class="btn btn-success" style="font-size: 20px; background: #ffffff; color: black;" title="Next">
                    Clear
                </button>
            </div>


        </div>



    </div>
    <div class="product-list">
        <!-- Product items will be dynamically added here -->
        <h4>Search Result</h4>
        <div style="border: solid 3.5px grey; border-radius: 3px; height: 500px;overflow-y:scroll" id="products">

        </div>
        <div style="float: right; margin: 10px;">
            @*<button id="addButton" class="btn btn-success" style="font-size: 15px; background: #0779ef" title="Next">
                    Add
                </button>*@
            <button class="btn btn-success" style="font-size: 15px; background: #ffffff; color: black;" title="Next">
                Clear
            </button>
        </div>
    </div>

    <div class="selected-products">
        <h4>Products for Order</h4>
        <div style="border: solid 3.5px grey; border-radius: 3px; height: 500px; overflow-y: scroll" id="selectedProducts">
            <!-- Selected product items will be dynamically added here -->
        </div>


    </div>
    <div>
        <h3>
            Recent Seraches
        </h3>
    </div>
</div>
<script>
    // Sample product data (you should replace this with your own data)

    const res = localStorage.getItem("lang");  
    let CustId = "";
    if (res === "Eng") {
        $('#Englang').css({ 'display': 'inline-block' });
        $('#Spanlang').css({ 'display': 'none' });
    }
    if (res === "Span") {
        $('#Spanlang').css({ 'display': 'inline-block' });
        $('#Englang').css({ 'display': 'none' });
    }

    var productsData = []
    function LoadProducts1() {
        $.get("/Home/Prdlist",
            {

            },
            function (data, status) {
                if (data != null && data != "")
                {
                    productsData = data;
                    renderProducts();
                }


                //alert("Data: " + data + "\nStatus: " + status);
                //alert("Changed!");
            });
    }
    function LoadProducts(OrderId) {
        $.get("/Home/Prdlist123",
            {
                OrderId: OrderId
            },
            function (data, status) {
                if (data != null && data != "") {
                    selectedProducts = data;
                    AfetDeleteSelectedProductsList()
                }


                //alert("Data: " + data + "\nStatus: " + status);
                //alert("Changed!");
            });
    }
    function LoadCategoryList() {
        $.get("/Home/Catlist",
            {

            },
            function (data, status) {
                if (data != null && data != "") {
                    productsData = data;
                    renderProducts();
                }


                //alert("Data: " + data + "\nStatus: " + status);
                //alert("Changed!");
            });
    }
    function getCustomerByEmail() {

        $.get("/Home/GetCustomerByEmail",
            {
                Email: localStorage.getItem("CustEmail").trim()
            },
            function (data, status) {

                if (data != null && data != "") {
                    console.log(data);
                    CustId = data[0].CustId;

                } else {
                    CustId = "";
                }




                //alert("Data: " + data + "\nStatus: " + status);
                //alert("Changed!");
            });
    }
    LoadProducts1()
    localStorage.getItem("OrderID").trim()
    LoadProducts(localStorage.getItem("OrderID").trim())
    getCustomerByEmail()
    
    //const productsData = [
    //    { id: 1, name: 'Product 1', category: 'electronics', price: 100 },
    //    { id: 2, name: 'Product 2', category: 'clothing', price: 50 },
    //    { id: 3, name: 'Product 3', category: 'books', price: 20 },
    //    // Add more products here
    //];



    const productsContainer = document.getElementById('products');
    const selectedProductsContainer = document.getElementById('selectedProducts');
    const searchInput = document.getElementById('searchInput');
    const categoryFilter = document.getElementById('categoryFilter');
    const totalSumElement = document.getElementById('total-sum');
    const addButton = document.getElementById('addButton');

    let selectedProducts = [];
    let ExistingProducts = [];

    // Function to render products based on search criteria and category
    function renderProducts() {
        const searchText = searchInput.value.toLowerCase();
        const selectedCategory = categoryFilter.value.toLowerCase();

        productsContainer.innerHTML = '';

        productsData.forEach(product => {
            if (
                (product.PrdEngDesc.toLowerCase().includes(searchText) || product.Category.toLowerCase().includes(searchText))
                && (selectedCategory === '' || product.Category.toLowerCase() === selectedCategory)
            ) {
                const productItem = document.createElement('div');
                productItem.className = 'product';
                //productItem.innerHTML = `
                //        <input type="checkbox" class="product-checkbox" data-id="${product.PrdId}">
                //        ${product.PrdDesc} (${product.Category}) - $${product.PrdPrice}
                //        <input type="number" class="qntybox form-control product-quantity" value="1" > </input>
                //    `;
                 productItem.innerHTML = `
                        <button class=" btn product-checkbox addButton" id="${product.PrdId}"  onclick="a1_onclick(${product.PrdId})"  data-id="${product.PrdId}" > + </button>
                        ${product.PrdEngDesc} (${product.Category}) - $${product.PrdPrice}
                    `;
                productsContainer.appendChild(productItem);
            }
        });
    }

    // Event listener for the "Add" button
  //  addButton.addEventListener('click', addSelectedProducts);


        //$('.addButton').click(function () {
        //    $(this).attr('id');
        //    alert($(this).attr('id'))
        //})

    function a1_onclick(id) {
        //document.getElementById(id).style.backgroundColor = "#F00";
       // alert(id)
        const quantity = 1;
            const product = productsData.find(item => item.PrdId == id);
            if (product.PrdId  > 0) {
                product.quantity = quantity;
                const sproduct = selectedProducts.find(item => item.PrdId == id);
                if (sproduct != null && sproduct != "") {
                    if (sproduct.PrdId > 0) {
                        var a = 1;
                    }
                    else { selectedProducts.push(product); }
                }
                else { selectedProducts.push(product); }
            }
        AfetDeleteSelectedProductsList();
    }
    // Function to add selected products to the selected products list
    function addSelectedProducts() {
        selectedProducts = [];

        const productCheckboxes = document.querySelectorAll('.product-checkbox:checked');
        const productQuantities = document.querySelectorAll('.product-quantity');

        productCheckboxes.forEach((checkbox, index) => {
            const productId = checkbox.getAttribute('data-id');
            const quantity = parseInt(productQuantities[index].value, 10);
            const product = productsData.find(item => item.PrdId == productId);

            if (product && quantity > 0) {
                product.quantity = quantity;
                selectedProducts.push(product);
            }
        });

        updateSelectedProductsList();
    }

    // Function to update the selected products list and total sum
    function updateSelectedProductsList() {
        selectedProductsContainer.innerHTML = '';
        let totalSum = 0;

            selectedProducts.forEach(product => {
                const selectedProductItem = document.createElement('div');
                selectedProductItem.className = 'product';
                selectedProductItem.style = 'margin:10px';
                //selectedProductItem.textContent = `${product.PrdDesc} (${product.Category}) - $${product.PrdPrice} x  ${product.quantity}`;
                //selectedProductItem.innerHTML = `${product.PrdDesc} (${product.Category}) - $${product.PrdPrice} x  <input type="number" class="qntybox form-control product-quantity" value="1" > </input>`;
                selectedProductItem.innerHTML = `${product.PrdEngDesc} (${product.Category}) - $${product.PrdPrice} x  <select id="quantity${product.PrdId}"  onchange="handleQuantityChange(${product.PrdId})">
            <option value="-1">Select</option>
            <option value="0">0(Delete)</option>
                                    <option selected value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>
                                    <option value="10+">10+</option>
                                </select>  ` ;
                selectedProductsContainer.appendChild(selectedProductItem);
                totalSum += product.PrdPrice * product.quantity;
            });
            totalSumElement.textContent = `Total: $${totalSum}`;
            ExistingProducts = selectedProducts;



    }

    // Event listeners for input and select changes
    searchInput.addEventListener('input', renderProducts);
    categoryFilter.addEventListener('change', renderProducts);

    // Initial rendering of products
    function handleQuantityChange(id) {
        let tempSelctedlist=[]
        const quantitySelect = document.getElementById("quantity"+id);

        if (quantitySelect.value === "0") {
            const product = selectedProducts.find(item => item.PrdId == id);

            if (product.PrdId > 0) {
                //selectedProducts.splice(selectedProducts.findIndex(a => a.id === product.PrdId), 1)
                selectedProducts.forEach(p => {
                    if (p.PrdId != product.PrdId)
                    {
                        tempSelctedlist.push(p)
                    }
                });
                selectedProducts = tempSelctedlist;
            }

        }
        else {
            const product = selectedProducts.find(item => item.PrdId == id);
            product.quantity = quantitySelect.value;
            selectedProducts.forEach(p => {
                if (p.PrdId == product.PrdId) {
                    p.quantity = parseInt(quantitySelect.value);
                    //tempSelctedlist.push(p)
                }
            });
            //selectedProducts = tempSelctedlist;

            //selectedProducts.push(product)
        }
        AfetDeleteSelectedProductsList();
    }
    function AfetDeleteSelectedProductsList() {
        selectedProductsContainer.innerHTML = '';
        let totalSum = 0;

        selectedProducts.forEach(product => {
            const selectedProductItem = document.createElement('div');
            selectedProductItem.className = 'product';
            selectedProductItem.style = 'margin:10px';
            //selectedProductItem.textContent = `${product.PrdDesc} (${product.Category}) - $${product.PrdPrice} x  ${product.quantity}`;
            //selectedProductItem.innerHTML = `${product.PrdDesc} (${product.Category}) - $${product.PrdPrice} x  <input type="number" class="qntybox form-control product-quantity" value="1" > </input>`;
            selectedProductItem.innerHTML = `${product.PrdEngDesc} (${product.Category}) - $${product.PrdPrice} x  <select id="quantity${product.PrdId}" value="${product.quantity}"  onchange="handleQuantityChange(${product.PrdId})">
            <option value="-1">Select</option>
            <option value="0">0(Delete)</option>
                                    <option selected value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>
                                    <option value="10+">10+</option>
                                </select>  ` ;
            selectedProductsContainer.appendChild(selectedProductItem);
            document.getElementById("quantity" + product.PrdId).value = product.quantity;
            totalSum += product.PrdPrice * product.quantity;
        });
        totalSumElement.textContent = `Total: $${totalSum}`;
        ExistingProducts = selectedProducts;



    }
    function SaveSelectedProductsList()
    {
        //alert("Calling Save")
        if (selectedProducts != null && selectedProducts != "" && CustId != "" && selectedProducts.length > 0) {
            selectedProducts[0].PrdEngDesc = CustId;
            selectedProducts[0].PrdESPDesc = localStorage.getItem("OrderID");
            if (res === "Eng") {
                document.getElementById("SalesOrder").href = "SalesOrder"
            }
            if (res === "Span") {
                document.getElementById("SalesOrderSpanish").href = "SalesOrderSpanish"
            }
           
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveOrder")',
                data: JSON.stringify(selectedProducts),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data, status) {
                    // alert("Data has been added successfully.");
                    //localStorage.setItem("OrderID", data.trim());
                    console.log(data.responseText);
                    console.log(status);
                   
                    //$.get("/Home/SalesOrder",
                    //    {

                    //    },
                    //    function (data, status) {

                    //    }
                    //);
                },
                //error: function () {
                //    alert("Error while inserting data");
                //}
                error: function (xhr, status) {
                    console.log(status);
                    console.log(xhr.responseText);
                }

            });
        }
        else {
            document.getElementById("SalesOrder").href = "SalesOrder" ;
            
        }

    }
    
</script>
  